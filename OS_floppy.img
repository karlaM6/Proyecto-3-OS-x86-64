 ;******************************************
 ; Bootloader.asm
 ; A Simple Bootloader
 ;******************************************
 org 0x7c00
 bits 16
 start: jmp boot

;; constant and variable definitions
 msg db "Welcome to My Operating System!", 0ah, 0dh, 0h

 boot:
 cli ; no interrupts
 cld ; all that we need to init

 mov ax, 0x50

 ;; set the buffer
 mov es, ax
 xor bx, bx

 mov al, 2 ; read 2 sector
 mov ch, 0 ; track 0
 mov cl, 2 ; sector to read (The second sector)
 mov dh,;******************************************
 ; kernel.asm
 ;

 org 0x500
 
;******************************************
; Definición de funciones
;******************************************

; Función para obtener un carácter desde el teclado
get_char:
    mov ah, 0
    int 16h
    movzx eax, al
    ret

; Función para imprimir una cadena de caracteres
print_string:
    mov ah, 0x0e
    mov si, 0  ; Inicializar el índice del puntero a la cadena
.print_loop:
    lodsb      ; Cargar 